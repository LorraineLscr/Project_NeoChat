{% extends 'base.html.twig' %}

{% block stylesheets %}
<link rel="stylesheet" href="{{asset('assets/css/chat.css')}}">
{% endblock %}

{% block title %}Salon : {{ channel.name }}{% endblock %}

{% block body %}

<div id="gradient"></div>
<div class="container">
    <div class="card border-primary mb-3" style="max-width: 90rem;">
        <div class="card-header"><i class="fa-regular fa-comments"></i>{{ channel.name }}</div>
        <div class="card-body">
            <div class="form-group">
                <div class="conversation">
                    {% for message in messages %}
                    {% if app.user == message.user %}
                    <div class="divMesMessages">
                        <div class="divUserMsg">
                            <div class="divImgAvatar">
                                <img class="imgUserMe"
                                    src="{{asset('assets/avatar/' ~ message.user.id ~ '.png')}}" alt="">
                            </div>
                            <p class="nomPerso">{{ message.user.pseudo }}</p>
                        </div>
                        <div class="messageEnvoye">{{ message.content }}</div>
                    </div>
                    {% else %}
                    <div class="mesMessagesRecus">
                        <div class="divUserMsg">
                            <div class="divImgAvatar">
                                <img class="imgUserMe"
                                    src="{{asset('assets/avatar/' ~ message.user.id ~ '.png')}}" alt="">
                            </div>
                            <p class="nomPerso">{{ message.user.pseudo }}</p>
                        </div>
                        <div class="messageRecu">{{ message.content }}</div>
                    </div>
                    {% endif %}
                    {% endfor %}
                </div>
                <div>
                    <form id="form">
                        <input id="message" class="input-group-text col-sm-9" placeholder="Message" type="text" />
                        <button id="submit" type="submit" class="btn btn-dark col-sm-3">Envoyer</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

{% block javascript %}
<script type="text/javascript">
    let chatDiv = document.querySelector('.conversation');
    chatDiv.scrollTop = chatDiv.scrollHeight; // On souhaite scroller toujours jusqu'au dernier message du chat

    let form = document.getElementById('form');

    function handleForm(event) {
        event.preventDefault(); // Empêche la page de se rafraîchir après le submit du formulaire
    }
    form.addEventListener('submit', handleForm, );

    const submit = document.querySelectorAll('button');
    submit[2].onclick = e => { // On change le comportement du submit
        const message = document.getElementById('message'); // Récupération du message dans l'input correspondant
        const data = { // La variable data sera envoyée au controller
            'content': message.value, // On transmet le message...
            'channel': {{ channel.id }} // ... Et le canal correspondant
        }
        message.value = ""; // pour supprimer l'input value apres l'envoi
        //console.log(data); // Pour vérifier vos informations
        fetch('/message', { // On envoie avec un post nos datas sur le endpoint /message de notre application
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
                "accept": "application/json"
            },
            body: JSON.stringify(data) // On envoie les data sous format JSON
        }).then((response) => {
            console.log(response);
        });
    };
    const link = '{{ app.request.attributes.get('_links').getLinksbyRel('mercure')[0].getHref }}';
    const url = new URL(link);
    url.searchParams.append('topic', '/chat/{{ channel.id }}'); // On ajoute le topic souhaité aux paramètres de la requête vers le Hub

    const eventSource = new EventSource(url, {withCredentials: false}); // On s'abonne au Hub

    const appUser = {{ app.user.id }};

    eventSource.onmessage = ({data}) => { // On écoute les événements publiés par le Hub
        const message = JSON.parse(data);
        // console.log(message);
        // Le contenu des événements est sous format JSON, il faut le parser
        document.querySelector('.conversation').innerHTML += 
        appUser === message.user.id ?
        `<div class="divMesMessages">
            <div class="divUserMsg">
                <div class="divImgAvatar">
                    <img class="imgUserMe"
                    src="{{ asset('assets/avatar/${ message.user.id }.png') }}" alt="">
                </div>
                <p class="nomPerso">${ message.user.pseudo }</p>
            </div>
            <div class="messageEnvoye">${ message.content }</div>
        </div>` :
        `<div class="mesMessagesRecus">
            <div class="divUserMsg">
                <div class="divImgAvatar">
                    <img class="imgUserMe"
                    src="{{ asset('assets/avatar/${ message.user.id }.png') }}" alt="">
                </div>
                <p class="nomPerso">${ message.user.pseudo }</p>
            </div>
            <div class="messageRecu">${ message.content }</div>
        </div>`;
        chatDiv.scrollTop = chatDiv.scrollHeight; // On demande au navigateur de scroller le chat tout en bas pour bien apercevoir le dernier message apparu
        console.log(chatDiv);
    }
         
   
</script>
{% endblock %}

{% endblock %}